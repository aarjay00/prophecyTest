{
  "metainfo" : {
    "id" : "1",
    "language" : "scala",
    "fabricId" : "52",
    "frontEndLanguage" : "sql",
    "mode" : "batch",
    "udfs" : {
      "language" : "scala",
      "udfs" : [ ],
      "functionPackageName" : "simpledatalabs_27.pm3rework.functions",
      "sharedFunctionPackageNames" : [ "simpledatalabs_27.baseprojectrw.functions" ]
    },
    "udafs" : {
      "language" : "scala",
      "code" : "package udfs\n\nimport org.apache.spark.sql.expressions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\n\n/**\n  * Here you can define your custom aggregate functions.\n  *\n  * Make sure to register your `udafs` in the register_udafs function below.\n  *\n  * Example:\n  *\n  * object GeometricMean extends UserDefinedAggregateFunction {\n  *   // This is the input fields for your aggregate function.\n  *   override def inputSchema: org.apache.spark.sql.types.StructType =\n  *     StructType(StructField(\"value\", DoubleType) :: Nil)\n  *\n  *   // This is the internal fields you keep for computing your aggregate.\n  *   override def bufferSchema: StructType = StructType(\n  *     StructField(\"count\", LongType) ::\n  *     StructField(\"product\", DoubleType) :: Nil\n  *   )\n  *\n  *   // This is the output type of your aggregatation function.\n  *   override def dataType: DataType = DoubleType\n  *\n  *   override def deterministic: Boolean = true\n  *\n  *   // This is the initial value for your buffer schema.\n  *   override def initialize(buffer: MutableAggregationBuffer): Unit = {\n  *     buffer(0) = 0L\n  *     buffer(1) = 1.0\n  *   }\n  *\n  *   // This is how to update your buffer schema given an input.\n  *   override def update(buffer: MutableAggregationBuffer, input: Row): Unit = {\n  *     buffer(0) = buffer.getAs[Long](0) + 1\n  *     buffer(1) = buffer.getAs[Double](1) * input.getAs[Double](0)\n  *   }\n  *\n  *   // This is how to merge two objects with the bufferSchema type.\n  *   override def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = {\n  *     buffer1(0) = buffer1.getAs[Long](0) + buffer2.getAs[Long](0)\n  *     buffer1(1) = buffer1.getAs[Double](1) * buffer2.getAs[Double](1)\n  *   }\n  *\n  *   // This is where you output the final value, given the final value of your bufferSchema.\n  *   override def evaluate(buffer: Row): Any = {\n  *     math.pow(buffer.getDouble(1), 1.toDouble / buffer.getLong(0))\n  *   }\n  * }\n  *\n  */\n\n\nobject UDAFs {\n  /**\n    * Registers UDAFs with Spark SQL\n    */\n  def registerUDAFs(spark: SparkSession): Unit = {\n    /**\n      * Example:\n      *\n      * spark.udf.register(\"gm\", GeometricMean)\n      *\n      */\n\n\n  }\n}\n"
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ {
          "name" : "Subgraph_1",
          "kind" : {
            "type" : "record",
            "fields" : [ ]
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : true
        }, {
          "name" : "basesg1_1",
          "kind" : {
            "type" : "record",
            "fields" : [ ]
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : true
        } ]
      },
      "oldCommon" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : { },
      "instances" : { },
      "selected" : "default",
      "nonEditable" : [ ],
      "isSubscribedPipelineWithPipelineConfigs" : false
    },
    "sparkConf" : [ ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "maven",
    "externalDependencies" : [ ],
    "dependentProjectExternalDependencies" : [ {
      "projectUID" : "228",
      "projectName" : "BaseProjectRW",
      "externalDependencies" : [ ]
    } ],
    "isImported" : false,
    "interimMode" : "Full",
    "interimModeEnabled" : true,
    "visualCodeInterimMode" : "Disabled",
    "recordsLimit" : {
      "enabled" : false,
      "value" : 1000
    },
    "topLevelPackage" : "io.prophecy.pipelines.pipeline1",
    "configurationVersion" : "v1"
  },
  "connections" : [ {
    "id" : "PFdJFfskd5JltjnForMel",
    "source" : "721n6ArSnZe1WprpeUytp$$F-pPZEa9uMjf2lkz9OfkD",
    "sourcePort" : "rDI95TY6jqcZMkuTHHvMO$$fMU32SfdqCYA6CAAYd1UB",
    "target" : "gyZlYVNwHzo9tYu7yqEG5$$X0V4KTZfP7srYRfLZqSeJ",
    "targetPort" : "GOlFv8vHNH95xTSE7h8Qa$$0okRvSPTCNNvz6pfriQuQ"
  }, {
    "id" : "9HIuO2SgVmWqh_wMt31CY",
    "source" : "gyZlYVNwHzo9tYu7yqEG5$$X0V4KTZfP7srYRfLZqSeJ",
    "sourcePort" : "QPTvAQbKw0aY0HBi-xIMM$$vr9_dQ-un3vdfJKyP0XkV",
    "target" : "gqfN6ESF09RaLXUMFIMns$$N6oGc6-ZC35lLKFTef-jw",
    "targetPort" : "0BxnN5zg4wRxFOQUG39F_$$UR_WWYqqCh719msKbiZXr"
  }, {
    "id" : "MCruoaRZtkjvJ1S1KX5Hm",
    "source" : "gyZlYVNwHzo9tYu7yqEG5$$X0V4KTZfP7srYRfLZqSeJ",
    "sourcePort" : "QPTvAQbKw0aY0HBi-xIMM$$vr9_dQ-un3vdfJKyP0XkV",
    "target" : "sXzqmzzPGUafo06IkYBcT$$2Fwhy4mvfMlycMkZFrErI",
    "targetPort" : "xc1kwumkSN7T0hQ0TnCXO$$gEu54lqZl2I0CBziFtK2h"
  } ],
  "processes" : {
    "721n6ArSnZe1WprpeUytp$$F-pPZEa9uMjf2lkz9OfkD" : {
      "id" : "721n6ArSnZe1WprpeUytp$$F-pPZEa9uMjf2lkz9OfkD",
      "component" : "Source",
      "metadata" : {
        "label" : "ds1",
        "slug" : "ds1",
        "x" : 120,
        "y" : 220,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "rDI95TY6jqcZMkuTHHvMO$$fMU32SfdqCYA6CAAYd1UB",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      },
      "properties" : {
        "datasetId" : "datasets/ds1"
      }
    },
    "gyZlYVNwHzo9tYu7yqEG5$$X0V4KTZfP7srYRfLZqSeJ" : {
      "id" : "gyZlYVNwHzo9tYu7yqEG5$$X0V4KTZfP7srYRfLZqSeJ",
      "component" : "Reformat",
      "metadata" : {
        "label" : "Reformat_1",
        "slug" : "Reformat_1",
        "x" : 320,
        "y" : 220,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "GOlFv8vHNH95xTSE7h8Qa$$0okRvSPTCNNvz6pfriQuQ",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "QPTvAQbKw0aY0HBi-xIMM$$vr9_dQ-un3vdfJKyP0XkV",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      },
      "properties" : {
        "columnsSelector" : [ ],
        "expressions" : [ ]
      }
    },
    "gqfN6ESF09RaLXUMFIMns$$N6oGc6-ZC35lLKFTef-jw" : {
      "id" : "gqfN6ESF09RaLXUMFIMns$$N6oGc6-ZC35lLKFTef-jw",
      "component" : "Subgraph",
      "metadata" : {
        "label" : "Subgraph_1",
        "slug" : "Subgraph_1",
        "x" : 520,
        "y" : 120,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "0BxnN5zg4wRxFOQUG39F_$$UR_WWYqqCh719msKbiZXr",
          "slug" : "in0",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "DsXRifXMdpMuCtHpCLarQ$$_2M7cyYHPDzh5FkAFsz0M",
          "slug" : "out0"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      },
      "properties" : {
        "packageName" : "simpledatalabs_27.pm3rework.subgraph.sg1",
        "externalId" : "subgraphs/sg1",
        "name" : "sg1"
      },
      "connections" : [ {
        "id" : "6rOAzchGyW3oLcWqxz_Qh",
        "source" : "gqfN6ESF09RaLXUMFIMns$$N6oGc6-ZC35lLKFTef-jw",
        "sourcePort" : "0BxnN5zg4wRxFOQUG39F_$$UR_WWYqqCh719msKbiZXr",
        "target" : "23-O0RDVCnfT7jDsScTO6$$6DQuFqq8wbS5jxNoc3L1J",
        "targetPort" : "CZQwD6S_ZcmZHTQ-TFuA1$$55Z_06GdGj3w-Dl8x3F0K"
      }, {
        "id" : "KFHI6oEDlvmbbM5SVDISK",
        "source" : "23-O0RDVCnfT7jDsScTO6$$6DQuFqq8wbS5jxNoc3L1J",
        "sourcePort" : "6S_3mbT_rjv5PvTogr5Ug$$iCZQ9ftj5CPytfC428UqK",
        "target" : "gqfN6ESF09RaLXUMFIMns$$N6oGc6-ZC35lLKFTef-jw",
        "targetPort" : "DsXRifXMdpMuCtHpCLarQ$$_2M7cyYHPDzh5FkAFsz0M"
      } ],
      "processes" : {
        "23-O0RDVCnfT7jDsScTO6$$6DQuFqq8wbS5jxNoc3L1J" : {
          "id" : "23-O0RDVCnfT7jDsScTO6$$6DQuFqq8wbS5jxNoc3L1J",
          "component" : "Reformat",
          "metadata" : {
            "label" : "Reformat_2",
            "slug" : "Reformat_2",
            "x" : 1040,
            "y" : 720,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "CZQwD6S_ZcmZHTQ-TFuA1$$55Z_06GdGj3w-Dl8x3F0K",
              "slug" : "in",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "customer_id",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  }
                } ]
              },
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "6S_3mbT_rjv5PvTogr5Ug$$iCZQ9ftj5CPytfC428UqK",
              "slug" : "out"
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ "CZQwD6S_ZcmZHTQ-TFuA1$$55Z_06GdGj3w-Dl8x3F0K##customer_id" ],
            "expressions" : [ {
              "target" : "customer_id",
              "expression" : {
                "format" : "sql",
                "expression" : "trimUDF(customer_id)"
              },
              "description" : ""
            } ]
          }
        }
      },
      "externalDependencies" : [ ]
    },
    "sXzqmzzPGUafo06IkYBcT$$2Fwhy4mvfMlycMkZFrErI" : {
      "id" : "sXzqmzzPGUafo06IkYBcT$$2Fwhy4mvfMlycMkZFrErI",
      "component" : "Subgraph",
      "metadata" : {
        "label" : "basesg1_1",
        "slug" : "basesg1_1",
        "x" : 520,
        "y" : 320,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "xc1kwumkSN7T0hQ0TnCXO$$gEu54lqZl2I0CBziFtK2h",
          "slug" : "in0",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "AjnbyqLDDXAgqR3dBKZ6Q$$9Faxj1HWg2XmYDC6wR47f",
          "slug" : "out0"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      },
      "properties" : {
        "packageName" : "simpledatalabs_27.baseprojectrw.subgraph.basesg1",
        "externalId" : "gitUri=https://github.com/aarjay00/prophecyTest&subPath=/baseProjectRW&tag=BaseProjectRW/3.0&projectSubscriptionProjectId=228&path=subgraphs/basesg1",
        "name" : "basesg1"
      },
      "connections" : [ {
        "id" : "zDTvA9bM42bUhAMWc1Xf_",
        "source" : "sXzqmzzPGUafo06IkYBcT$$2Fwhy4mvfMlycMkZFrErI",
        "sourcePort" : "xc1kwumkSN7T0hQ0TnCXO$$gEu54lqZl2I0CBziFtK2h",
        "target" : "OOzV-k9BC8BfljAmbpkRp$$Iii0Ow7pEC77LpZGrIWsU",
        "targetPort" : "DlKNiCwQPssX6s5RafTn0$$g2whKDP-VPE55Rta3rzQ7"
      }, {
        "id" : "9vHKv2j0QdkSnuoWnSvQO",
        "source" : "OOzV-k9BC8BfljAmbpkRp$$Iii0Ow7pEC77LpZGrIWsU",
        "sourcePort" : "XX8l5IKZYUUwcgZryY4N3$$dAwx1RwkCLyosd7yox0lJ",
        "target" : "sXzqmzzPGUafo06IkYBcT$$2Fwhy4mvfMlycMkZFrErI",
        "targetPort" : "AjnbyqLDDXAgqR3dBKZ6Q$$9Faxj1HWg2XmYDC6wR47f"
      } ],
      "processes" : {
        "OOzV-k9BC8BfljAmbpkRp$$Iii0Ow7pEC77LpZGrIWsU" : {
          "id" : "OOzV-k9BC8BfljAmbpkRp$$Iii0Ow7pEC77LpZGrIWsU",
          "component" : "Reformat",
          "metadata" : {
            "label" : "Reformat_1",
            "slug" : "Reformat_1",
            "x" : 1180,
            "y" : 800,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "DlKNiCwQPssX6s5RafTn0$$g2whKDP-VPE55Rta3rzQ7",
              "slug" : "in",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "customer_id",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  }
                } ]
              },
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "XX8l5IKZYUUwcgZryY4N3$$dAwx1RwkCLyosd7yox0lJ",
              "slug" : "out"
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "expressions" : [ ]
          }
        }
      },
      "externalDependencies" : [ ]
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ],
    "isCustomOutputSchema" : false
  }
}