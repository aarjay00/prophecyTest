package graph

import io.prophecy.libs._
import udfs.UDFs._
import config.Context
import org.apache.spark._
import org.apache.spark.sql._
import org.apache.spark.sql.functions._
import org.apache.spark.sql.types._
import org.apache.spark.sql.expressions._
import java.time._

object EXP_Prepare_CRC {

  def apply(context: Context, in: DataFrame): DataFrame =
    in.select(
      col("OPTION_EXTEND_TIMES_QTY1").as("OPTION_EXTEND_TIMES_QTY"),
      col("AUTO_UPGR_ELIG_TO_CATG_CODE1").as("AUTO_UPGR_ELIG_TO_CATG_CODE"),
      col("RDSS_PRODUCT_CODE1").as("RDSS_PRODUCT_CODE"),
      col("SHIP_CODE1").as("SHIP_CODE"),
      col("GROUP_CABN_OPTN_OVRID_DAYS_QTY1")
        .as("GROUP_CABN_OPTN_OVRID_DAYS_QTY"),
      col("REGION_TRAVEL_AREA_DESC1").as("REGION_TRAVEL_AREA_DESC"),
      col("VOYAGE_GUEST_BOARDING_DATE1").as("VOYAGE_GUEST_BOARDING_DATE"),
      col("OPTION_EXTENTION_DAYS_QTY1").as("OPTION_EXTENTION_DAYS_QTY"),
      col("ITINERARY_CODE1").as("ITINERARY_CODE"),
      col("VOYAGE_REVENUE_SAILING_FLAG1").as("VOYAGE_REVENUE_SAILING_FLAG"),
      col("COUNT_REPORT_SHIP_CODE1").as("COUNT_REPORT_SHIP_CODE"),
      col("SAILING_TYPE_DESC1").as("SAILING_TYPE_DESC"),
      col("CRSMTCH_DSPL_LNG_CMNT_FLAG1").as("CRSMTCH_DSPL_LNG_CMNT_FLAG"),
      col("SALES_OVERRIDE_PRODUCT_CODE1"),
      col("PENALTY_EXCEPTION_TO_DATE1").as("PENALTY_EXCEPTION_TO_DATE"),
      col("COUNT_REPORT_ITINERARY_DESC1").as("COUNT_REPORT_ITINERARY_DESC"),
      col("CRSMTCH_DSPL_LNG_CMNT_FLAG")
        .or(col("ORIGINAL_SHIP_PROFILE_ID").cast(StringType))
        .or(col("HOLD_DECK_LEGEND_CODE"))
        .or(col("GROUP_OPTION_EXTEND_TIMES_QTY").cast(StringType))
        .or(col("GROUP_OPTION_EXTEND_DAYS_QTY").cast(StringType))
        .or(col("GAP_POINTS_QTY").cast(StringType))
        .or(col("BOOK_MINIMUM_REQUIRED_AGE_CNT").cast(StringType))
        .or(col("ORIGINAL_GAP_POINTS_QTY").cast(StringType))
        .or(col("LAST_CHANGED_APPLICATION_ID"))
        .or(col("VOYAGE_EXPEDITION_FLAG"))
        .as("out_F101_F110"),
      col("VOYAGE_DISPATCH_DESC1").as("VOYAGE_DISPATCH_DESC"),
      col("GAP_POINTS_QTY1").as("GAP_POINTS_QTY"),
      col("SHIP_CURRENCY_CODE")
        .or(col("BREAK_THROUGH_PROMOTION_CODE"))
        .or(
          date_format(to_timestamp(col("ITINERARY_VOYAGE_EFF_FROM_DATE"),
                                   "yyyyMMddHHmmss"
                      ),
                      "yyyyMMddHHmmss"
          )
        )
        .as("out_F111_F120"),
      col("VOYAGE_REMARK_1_TEXT1").as("VOYAGE_REMARK_1_TEXT"),
      col("GROUP_OPTN_DAYS_OVRID_QTY1").as("GROUP_OPTN_DAYS_OVRID_QTY"),
      col("VALID_SAILING_FLAG")
        .or(col("ACCOUNTING_BRAND"))
        .or(col("VATTABLE_FLAG"))
        .as("out_120_121_123"),
      col("CHECK_IN_START_TIME1").as("CHECK_IN_START_TIME"),
      col("VOYAGE_TERMINATION_DATE1").as("VOYAGE_TERMINATION_DATE"),
      col("SAILING_STATUS_REASON_CODE1").as("SAILING_STATUS_REASON_CODE"),
      col("VOYAGE_SET_SAIL_HOUR_CODE1").as("VOYAGE_SET_SAIL_HOUR_CODE"),
      date_format(to_timestamp(col("VOYAGE_EMBARKATION_TIME"),
                               "yyyyMMddHHmmss"
                  ),
                  "yyyyMMddHHmmss"
      ).or(
          date_format(to_timestamp(col("VOYAGE_SET_SAIL_TIME"),
                                   "yyyyMMddHHmmss"
                      ),
                      "yyyyMMddHHmmss"
          )
        )
        .or(col("VOYAGE_EMBARKATION_HOUR_CODE"))
        .or(col("VOYAGE_SET_SAIL_HOUR_CODE"))
        .or(col("REGION_TRAVEL_AREA_CODE"))
        .or(col("REGION_TRAVEL_AREA_DESC"))
        .or(col("ITINERARY_DAYS_QTY").cast(StringType))
        .or(col("VOYAGE_ORIGINATING_PORT_CODE"))
        .or(col("VOYAGE_ORIGINATING_PORT_DESC"))
        .or(col("VOYAGE_CHARTERED_FLAG"))
        .as("out_F41_F50"),
      col("VOYAGE_COMMENT_TEXT1").as("VOYAGE_COMMENT_TEXT"),
      col("AMENITY_DESC1").as("AMENITY_DESC"),
      col("VOYAGE_GG_DISCOUNT_CLOSED_DATE1")
        .as("VOYAGE_GG_DISCOUNT_CLOSED_DATE"),
      col("VOYAGE_CRUISE_ONLY_UAP_AMT1").as("VOYAGE_CRUISE_ONLY_UAP_AMT"),
      col("VOYAGE_RESERVATION_STATUS_CODE1")
        .as("VOYAGE_RESERVATION_STATUS_CODE"),
      col("VOYAGE_GG_DISCOUNT_PCT1").as("VOYAGE_GG_DISCOUNT_PCT"),
      col("SAILING_TYPE_CODE").or(col("SAILING_TYPE_DESC")).as("out_F121_F130"),
      col("AUTOMATED_PRODUCTS_LYL_PNT_QTY1")
        .as("AUTOMATED_PRODUCTS_LYL_PNT_QTY"),
      col("PAYMENT_SCHEDULE_CODE")
        .or(col("COUNT_REPORT_SHIP_CODE"))
        .or(col("PAYMENT_SCHEUDLE_DESC"))
        .or(col("VOYAGE_LONG_COMMENT_TEXT"))
        .or(col("VOYAGE_CRS_DEPARTURE_DATE_TEXT"))
        .or(col("VOYAGE_RESERVATION_STATUS_CODE"))
        .or(col("VOYAGE_RESERVATION_STATUS_DESC"))
        .or(col("VOYAGE_DISPATCH_CODE"))
        .or(col("VOYAGE_DISPATCH_DESC"))
        .or(
          date_format(
            to_timestamp(col("PRIOR_YEAR_SAIL_DATE"), "yyyyMMddHHmmss"),
            "yyyyMMddHHmmss"
          )
        )
        .as("out_F21_F30"),
      col("PRIOR_YEAR_SAIL_DATE1").as("PRIOR_YEAR_SAIL_DATE"),
      col("VOYAGE_EMBARKATION_TIME1").as("VOYAGE_EMBARKATION_TIME"),
      col("VOYAGE_UAP_DISCOUNT_EXTND_FLAG1")
        .as("VOYAGE_UAP_DISCOUNT_EXTND_FLAG"),
      col("SAILING_TYPE_CODE1").as("SAILING_TYPE_CODE"),
      col("VOYAGE_EXPEDITION_FLAG1").as("VOYAGE_EXPEDITION_FLAG"),
      col("ITINERARY_DAYS_QTY1").as("ITINERARY_DAYS_QTY"),
      col("VOYAGE_YEAR_QUARTER_SAIL_DATE")
        .cast(StringType)
        .or(col("COUNT_REPORT_ITINERARY_CODE"))
        .or(col("COUNT_REPORT_ITINERARY_DESC"))
        .or(col("OPTION_EXTENTION_DAYS_QTY").cast(StringType))
        .or(col("VOYAGE_COMMENT_TEXT"))
        .or(col("ACCOUNTING_VOYAGE_NBR"))
        .or(
          date_format(
            to_timestamp(col("VOYAGE_GUEST_BOARDING_DATE"), "yyyyMMddHHmmss"),
            "yyyyMMddHHmmss"
          )
        )
        .or(
          date_format(to_timestamp(col("VOYAGE_RETURN_DATE"), "yyyyMMddHHmmss"),
                      "yyyyMMddHHmmss"
          )
        )
        .or(col("EXTEND_OPTION_FLAG_CRSMTCH_QTY").cast(StringType))
        .or(col("ENCORE_ITINERARY_CODE"))
        .as("out_F31_F40"),
      col("RESTRICT_INDIVIDUAL_QUAD_FLAG1").as("RESTRICT_INDIVIDUAL_QUAD_FLAG"),
      col("VOYAGE_GRP_CABN_GROSS_TARG_QTY")
        .cast(StringType)
        .or(col("VOYAGE_GROUP_CABN_NET_TARG_QTY").cast(StringType))
        .or(col("MONTH_NBR").cast(StringType))
        .or(col("VOYAGE_BONUS_COMMISSION_FLAG"))
        .or(col("VOYAGE_PAYSCH_EXCPN_FLAG"))
        .or(col("BREAK_THROUGH_PROMOTION_2_CODE"))
        .or(col("VOYAGE_ELIGIBLE_AUTO_UPGR_FLAG"))
        .or(col("VOYAGE_REVENUE_SAILING_FLAG"))
        .or(col("VOYAGE_DEPARTURE_JULIAN_DATE").cast(StringType))
        .or(col("VOYAGE_DEPARTURE_YEAR_NBR").cast(StringType))
        .as("out_F71_F80"),
      col("VOYAGE_NBR")
        .cast(StringType)
        .or(col("SHIP_CODE"))
        .or(
          date_format(
            to_timestamp(col("SHIP_DEPARTURE_DATE"), "yyyyMMddHHmmss"),
            "yyyyMMddHHmmss"
          )
        )
        .or(
          date_format(
            to_timestamp(col("EFFECTIVE_START_DATE"), "yyyyMMddHHmmss"),
            "yyyyMMddHHmmss"
          )
        )
        .or(
          date_format(to_timestamp(col("EFFECTIVE_END_DATE"), "yyyyMMddHHmmss"),
                      "yyyyMMddHHmmss"
          )
        )
        .or(col("SHIP_PROFILE_ID").cast(StringType))
        .or(col("SHIP_PROFILE_DESC"))
        .or(col("AUTO_UPGR_ELIG_FROM_CATG_CODE"))
        .as("out_F1_F10"),
      col("PROCESS_LAST_UPDATE_USER_ID1").as("PROCESS_LAST_UPDATE_USER_ID"),
      col("VOYAGE_YEAR_QUARTER_SAIL_DATE1").as("VOYAGE_YEAR_QUARTER_SAIL_DATE"),
      col("VOYAGE_NBR1").as("VOYAGE_NBR"),
      col("VOYAGE_GROUP_CABN_NET_TARG_QTY1")
        .as("VOYAGE_GROUP_CABN_NET_TARG_QTY"),
      col("FINAL_OPTION_EXTNSN_DAYS_QTY1").as("FINAL_OPTION_EXTNSN_DAYS_QTY"),
      col("AUTO_UPGR_ELIG_TO_CATG_CODE")
        .or(col("GEOGRAPHIC_REGION_CODE"))
        .or(col("GEOGRAPHIC_REGION_REFNC_CODE"))
        .or(col("GEOGRAPHIC_AREA_NAME"))
        .or(col("GEOGRAPHIC_AREA_TEXT"))
        .or(col("GEOGRAPHIC_AREA_SAIL_PERD_TEXT"))
        .or(col("COMMISSION_PROC_FOR_SAIL_FLAG"))
        .or(
          date_format(
            to_timestamp(col("VOYAGE_BALANCING_DATE"), "yyyyMMddHHmmss"),
            "yyyyMMddHHmmss"
          )
        )
        .or(
          date_format(
            to_timestamp(col("VOYAGE_TERMINATION_DATE"), "yyyyMMddHHmmss"),
            "yyyyMMddHHmmss"
          )
        )
        .or(col("PRIOR_YEAR_SHIP_CODE"))
        .as("out_F11_F20"),
      col("VOYAGE_RETURN_DATE1").as("VOYAGE_RETURN_DATE"),
      col("GROUP_OPTION_EXTEND_TIMES_QTY1").as("GROUP_OPTION_EXTEND_TIMES_QTY"),
      col("GROUP_OPTION_EXTEND_DAYS_QTY1").as("GROUP_OPTION_EXTEND_DAYS_QTY"),
      col("VOYAGE_DEPARTURE_YEAR_NBR1").as("VOYAGE_DEPARTURE_YEAR_NBR"),
      col("CURRENT_IND1").as("CURRENT_FLAG"),
      col("VOYAGE_ELIGIBLE_AUTO_UPGR_FLAG1")
        .as("VOYAGE_ELIGIBLE_AUTO_UPGR_FLAG"),
      col("VOYAGE_DISPATCH_CODE1").as("VOYAGE_DISPATCH_CODE"),
      col("PROCESS_CREATION_DTM1").as("PROCESS_CREATION_DTM"),
      col("SRC_VOYAGE_UPSERT_DTM1").as("SRC_VOYAGE_UPSERT_DTM"),
      col("GEOGRAPHIC_AREA_NAME1").as("GEOGRAPHIC_AREA_NAME"),
      col("REGION_TRAVEL_AREA_CODE1").as("REGION_TRAVEL_AREA_CODE"),
      col("PAYMENT_SCHEDULE_CODE1").as("PAYMENT_SCHEDULE_CODE"),
      col("VOYAGE_BONUS_COMMISSION_FLAG1").as("VOYAGE_BONUS_COMMISSION_FLAG"),
      col("RESTRICT_INDIVDUAL_TRIPLE_FLAG1")
        .as("RESTRICT_INDIVDUAL_TRIPLE_FLAG"),
      col("VOYAGE_AIR_SEA_UAP_AMT1").as("VOYAGE_AIR_SEA_UAP_AMT"),
      col("VOYAGE_GG_DISCOUNT_REOPEN_DATE1")
        .as("VOYAGE_GG_DISCOUNT_REOPEN_DATE"),
      col("VOYAGE_RECOGNIZE_EXPN_YEAR_NBR")
        .cast(StringType)
        .or(col("GROUP_OPTN_DAYS_OVRID_QTY").cast(StringType))
        .or(col("GROUP_GTY_OPTN_OVRID_DAYS_QTY").cast(StringType))
        .or(col("GROUP_CABN_OPTN_OVRID_DAYS_QTY").cast(StringType))
        .or(
          date_format(to_timestamp(col("VOYAGE_REVIEW_DATE"), "yyyyMMddHHmmss"),
                      "yyyyMMddHHmmss"
          )
        )
        .or(col("RESTART_C_U_FOR_GROUPS_FLAG"))
        .or(
          date_format(
            to_timestamp(col("PENALTY_EXCEPTION_FROM_DATE"), "yyyyMMddHHmmss"),
            "yyyyMMddHHmmss"
          )
        )
        .or(
          date_format(
            to_timestamp(col("PENALTY_EXCEPTION_TO_DATE"), "yyyyMMddHHmmss"),
            "yyyyMMddHHmmss"
          )
        )
        .or(
          date_format(
            to_timestamp(col("GROUP_AMENITIES_PLIM_RUN_DTM"), "yyyyMMddHHmmss"),
            "yyyyMMddHHmmss"
          )
        )
        .or(col("AMENITY_CODE"))
        .as("out_F81_F90"),
      col("VOYAGE_REVIEW_DATE1").as("VOYAGE_REVIEW_DATE"),
      col("VOYAGE_UAP_PERCENT_DOLLAR_CODE1")
        .as("VOYAGE_UAP_PERCENT_DOLLAR_CODE"),
      col("CHNG_CXL_MANL_MOD_PRIR_DAY_QTY1")
        .as("CHNG_CXL_MANL_MOD_PRIR_DAY_QTY"),
      col("RESTRICT_GROUP_SGLDBL_3_4_FLAG1")
        .as("RESTRICT_GROUP_SGLDBL_3_4_FLAG"),
      col("GROUP_AMENITIES_PLIM_RUN_DTM1").as("GROUP_AMENITIES_PLIM_RUN_DTM"),
      col("EFFECTIVE_END_DATE1").as("EFFECTIVE_END_DATE"),
      col("VOYAGE_RESERVATION_STATUS_DESC1")
        .as("VOYAGE_RESERVATION_STATUS_DESC"),
      col("AMENITY_DESC")
        .or(col("AUTOBOOK_DAYS_START_QTY").cast(StringType))
        .or(col("AUTOBOOK_DAYS_STOP_QTY").cast(StringType))
        .or(col("PSEUDO_NAME_ADD_PRIOR_DAYS_QTY").cast(StringType))
        .or(col("CHNG_CXL_MANL_MOD_PRIR_DAY_QTY").cast(StringType))
        .or(col("OPTION_EXTEND_TIMES_QTY").cast(StringType))
        .or(col("FINAL_OPTION_EXTNSN_DAYS_QTY").cast(StringType))
        .or(col("AUTOMATED_PRODUCTS_LYL_PNT_QTY").cast(StringType))
        .or(col("AUTO_BOOK_AVAILABLE_FLAG"))
        .or(col("ITINERARY_CODE"))
        .as("out_F91_F100"),
      col("GROUP_GTY_OPTN_OVRID_DAYS_QTY1").as("GROUP_GTY_OPTN_OVRID_DAYS_QTY"),
      col("SHIP_CURRENCY_CODE1").as("SHIP_CURRENCY_CODE"),
      col("AUTO_UPGR_ELIG_FROM_CATG_CODE1").as("AUTO_UPGR_ELIG_FROM_CATG_CODE"),
      col("SAILING_STATUS_CHANGE_DATE1").as("SAILING_STATUS_CHANGE_DATE"),
      col("PAYMENT_SCHEUDLE_DESC1").as("PAYMENT_SCHEUDLE_DESC"),
      col("PSEUDO_NAME_ADD_PRIOR_DAYS_QTY1")
        .as("PSEUDO_NAME_ADD_PRIOR_DAYS_QTY"),
      col("ORIGINAL_SHIP_PROFILE_ID1").as("ORIGINAL_SHIP_PROFILE_ID"),
      col("VOYAGE_BALANCING_DATE1").as("VOYAGE_BALANCING_DATE"),
      col("VOYAGE_PAYSCH_EXCPN_FLAG1").as("VOYAGE_PAYSCH_EXCPN_FLAG"),
      col("SHIP_PROFILE_ID1").as("SHIP_PROFILE_ID"),
      col("CHECK_IN_END_TIME1").as("CHECK_IN_END_TIME"),
      col("VOYAGE_ORIGINATING_PORT_DESC1").as("VOYAGE_ORIGINATING_PORT_DESC"),
      col("SALES_OVERRIDE_PRODUCT_DESC1"),
      col("REDEPLOYMENT_DATE1"),
      col("GEOGRAPHIC_REGION_CODE1").as("GEOGRAPHIC_REGION_CODE"),
      col("VOYAGE_GG_DISCOUNT_AVL_FLAG")
        .or(col("VOYAGE_GG_DISCOUNT_PCT").cast(StringType))
        .or(
          date_format(to_timestamp(col("VOYAGE_GG_DISCOUNT_CLOSED_DATE"),
                                   "yyyyMMddHHmmss"
                      ),
                      "yyyyMMddHHmmss"
          )
        )
        .or(
          date_format(to_timestamp(col("VOYAGE_GG_DISCOUNT_REOPEN_DATE"),
                                   "yyyyMMddHHmmss"
                      ),
                      "yyyyMMddHHmmss"
          )
        )
        .or(col("VOYAGE_UAP_PERCENT_DOLLAR_CODE"))
        .or(col("VOYAGE_CRUISE_ONLY_UAP_AMT").cast(StringType))
        .or(col("VOYAGE_AIR_SEA_UAP_AMT").cast(StringType))
        .or(col("VOYAGE_UAP_DISCOUNT_EXTND_FLAG"))
        .or(col("RESTRICT_INDIVDUAL_TRIPLE_FLAG"))
        .or(col("RESTRICT_INDIVIDUAL_QUAD_FLAG"))
        .as("out_F51_F60"),
      col("PRIOR_YEAR_SHIP_CODE1").as("PRIOR_YEAR_SHIP_CODE"),
      col("LAST_CHANGED_APPLICATION_ID1").as("LAST_CHANGED_APPLICATION_ID"),
      col("SRC_VOYAGE_UPSERT_USER_ID1").as("SRC_VOYAGE_UPSERT_USER_ID"),
      col("EXPANDED_AMENITY_PROCESS_CODE1").as("EXPANDED_AMENITY_PROCESS_CODE"),
      col("ORIGINAL_GAP_POINTS_QTY1").as("ORIGINAL_GAP_POINTS_QTY"),
      col("EXPANDED_AMENITY_PROCESS_DTM1").as("EXPANDED_AMENITY_PROCESS_DTM"),
      col("VOYAGE_GG_DISCOUNT_AVL_FLAG1").as("VOYAGE_GG_DISCOUNT_AVL_FLAG"),
      col("VOYAGE_SET_SAIL_TIME1").as("VOYAGE_SET_SAIL_TIME"),
      col("OVERRIDE_OPTION_DAYS_FLAG1")
        .or(
          date_format(to_timestamp(col("REDEPLOYMENT_DATE1"), "yyyyMMddHHmmss"),
                      "yyyyMMddHHmmss"
          )
        )
        .as("out_123_124"),
      col("AUTOBOOK_DAYS_START_QTY1").as("AUTOBOOK_DAYS_START_QTY"),
      col("OVERRIDE_OPTION_DAYS_FLAG1"),
      col("VOYAGE_LONG_COMMENT_TEXT1").as("VOYAGE_LONG_COMMENT_TEXT"),
      col("HOLD_DECK_LEGEND_CODE1").as("HOLD_DECK_LEGEND_CODE"),
      col("AUTOBOOK_DAYS_STOP_QTY1").as("AUTOBOOK_DAYS_STOP_QTY"),
      col("BREAK_THROUGH_PROMOTION_CODE1").as("BREAK_THROUGH_PROMOTION_CODE"),
      col("ACCOUNTING_BRAND1").as("ACCOUNTING_BRAND"),
      col("VOYAGE_CHARTERED_FLAG1").as("VOYAGE_CHARTERED_FLAG"),
      col("BREAK_THROUGH_PROMOTION_2_CODE1")
        .as("BREAK_THROUGH_PROMOTION_2_CODE"),
      col("SAILING_STATUS1").as("SAILING_STATUS"),
      col("SHIP_PROFILE_DESC1").as("SHIP_PROFILE_DESC"),
      col("ACCOUNTING_VOYAGE_NBR1").as("ACCOUNTING_VOYAGE_NBR"),
      col("GEOGRAPHIC_REGION_REFNC_CODE1").as("GEOGRAPHIC_REGION_REFNC_CODE"),
      col("EFFECTIVE_START_DATE1").as("EFFECTIVE_START_DATE"),
      col("VOYAGE_GRP_CABN_GROSS_TARG_QTY1")
        .as("VOYAGE_GRP_CABN_GROSS_TARG_QTY"),
      col("PROCESS_CREATION_USER_ID1").as("PROCESS_CREATION_USER_ID"),
      col("RESTRICT_GROUP_TRIPLE_FLAG1").as("RESTRICT_GROUP_TRIPLE_FLAG"),
      col("COUNT_REPORT_ITINERARY_CODE1").as("COUNT_REPORT_ITINERARY_CODE"),
      col("RESTRICT_GROUP_QUAD_FLAG1").as("RESTRICT_GROUP_QUAD_FLAG"),
      col("MONTH_NBR1").as("MONTH_NBR"),
      col("GEOGRAPHIC_AREA_TEXT1").as("GEOGRAPHIC_AREA_TEXT"),
      col("ENCORE_ITINERARY_CODE1").as("ENCORE_ITINERARY_CODE"),
      col("EXTEND_OPTION_FLAG_CRSMTCH_QTY1")
        .as("EXTEND_OPTION_FLAG_CRSMTCH_QTY"),
      col("VOYAGE_CRS_DEPARTURE_DATE_TEXT1")
        .as("VOYAGE_CRS_DEPARTURE_DATE_TEXT"),
      col("ITINERARY_VOYAGE_EFF_FROM_DATE1")
        .as("ITINERARY_VOYAGE_EFF_FROM_DATE"),
      col("VOYAGE_ORIGINATING_PORT_CODE1").as("VOYAGE_ORIGINATING_PORT_CODE"),
      col("RESTRICT_INDVD_SGLDBL_3_4_FLAG1")
        .as("RESTRICT_INDVD_SGLDBL_3_4_FLAG"),
      col("SHIP_DEPARTURE_DATE1").as("SHIP_DEPARTURE_DATE"),
      col("VATTABLE_FLAG1").as("VATTABLE_FLAG"),
      col("VOYAGE_EMBARKATION_HOUR_CODE1").as("VOYAGE_EMBARKATION_HOUR_CODE"),
      col("BOOK_MINIMUM_REQUIRED_AGE_CNT1").as("BOOK_MINIMUM_REQUIRED_AGE_CNT"),
      col("VALID_SAILING_FLAG1").as("VALID_SAILING_FLAG"),
      col("VOYAGE_DEPARTURE_JULIAN_DATE1").as("VOYAGE_DEPARTURE_JULIAN_DATE"),
      col("PROCESS_LAST_UPDATE_DTM1").as("PROCESS_LAST_UPDATE_DTM"),
      col("RESTART_C_U_FOR_GROUPS_FLAG1").as("RESTART_C_U_FOR_GROUPS_FLAG"),
      col("VOYAGE_REMARK_2_TEXT1").as("VOYAGE_REMARK_2_TEXT"),
      col("PENALTY_EXCEPTION_FROM_DATE1").as("PENALTY_EXCEPTION_FROM_DATE"),
      col("AMENITY_CODE1").as("AMENITY_CODE"),
      col("VOYAGE_RECOGNIZE_EXPN_YEAR_NBR1")
        .as("VOYAGE_RECOGNIZE_EXPN_YEAR_NBR"),
      col("CHECKSUM_NBR1").as("CHECKSUM_NBR"),
      col("COMMISSION_PROC_FOR_SAIL_FLAG1").as("COMMISSION_PROC_FOR_SAIL_FLAG"),
      col("CHECK_IN_START_TIME")
        .or(col("CHECK_IN_END_TIME"))
        .or(col("RDSS_PRODUCT_CODE"))
        .or(col("SALES_OVERRIDE_PRODUCT_CODE1"))
        .or(col("SALES_OVERRIDE_PRODUCT_DESC1"))
        .or(col("SAILING_STATUS"))
        .or(col("SAILING_STATUS_REASON_CODE"))
        .or(
          date_format(
            to_timestamp(col("SAILING_STATUS_CHANGE_DATE"), "yyyyMMddHHmmss"),
            "yyyyMMddHHmmss"
          )
        )
        .as("out_125_132"),
      col("GEOGRAPHIC_AREA_SAIL_PERD_TEXT1")
        .as("GEOGRAPHIC_AREA_SAIL_PERD_TEXT"),
      col("RESTRICT_INDVD_SGLDBL_3_4_FLAG")
        .or(col("RESTRICT_GROUP_TRIPLE_FLAG"))
        .or(col("RESTRICT_GROUP_QUAD_FLAG"))
        .or(col("VOYAGE_REMARK_1_TEXT"))
        .or(col("VOYAGE_REMARK_2_TEXT"))
        .or(col("RESTRICT_GROUP_SGLDBL_3_4_FLAG"))
        .or(
          date_format(
            to_timestamp(col("EXPANDED_AMENITY_PROCESS_DTM"), "yyyyMMddHHmmss"),
            "yyyyMMddHHmmss"
          )
        )
        .or(col("EXPANDED_AMENITY_PROCESS_CODE"))
        .as("out_F61_F70"),
      col("AUTO_BOOK_AVAILABLE_FLAG1").as("AUTO_BOOK_AVAILABLE_FLAG")
    )

}
