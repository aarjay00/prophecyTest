{"initCode":"","code":" udf(\n    (\n        sDatasetPath: String,\n        sDatasetName: String,\n        pUKDWDATABASE: String,\n        pUKDWUSERNAME: String,\n        pUKDWPASSWORD: String,\n        pUKDWSCHEMA: String,\n        pPIB_ID: String\n    ) => {\n      var pop: Any = null\n      var sFieldName: Any = null\n      var Ans: Any = null\n      var sFieldInfo: Any = null\n      var aActionFields: Any = null\n      var bNumeric: Any = null\n      var iFieldCount: Any = null\n      var sMaxVal: Any = null\n      var sMinVal: Any = null\n      var ag: Any = null\n      var sValues: Any = null\n      var touch: Any = null\n      var sType: Any = null\n      var sSQL: Any = null\n      var iNewCount: Any = null\n      var aActionFieldsA: Any = null\n      var rm: Any = null\n      var iNumFields: Any = null\n      var iTag: Any = null\n      var bDate: Any = null\n      var sFileName: Any = null\n      def testdate() = {\n        bDate = false\n        bDate\n      \n      def testnumeric() = {\n        bNumeric = false\n        if (num(sMinVal) && num(sMaxVal)) {\n          bNumeric = true\n        } else {}\n        if (bNumeric) {\n          if (\n            (oconv(sMinVal, \"P(0N.0N)\") == sMinVal) && (oconv(\n              sMaxVal,\n              \"P(0N.0N)\"\n            ) == sMaxVal)\n          ) {\n            sType = \"DECIMAL\"\n          } else sType = \"INTEGER\"\n        } else {}\n        bNumeric\n      }\n      def testchar() = {\n        if (ds_len(sMaxVal) == ds_len(sMinVal)) {\n          sType =\n            ds_string_concat(ds_string_concat(\"CHAR(\", ds_len(sMaxVal)), \")\")\n        } else\n          sType =\n            ds_string_concat(ds_string_concat(\"VARCHAR(\", ds_len(sMaxVal)), \")\")\n        Ans\n      }\n      Deffun\n      rtreadpxdataset(path, file)\n      Calling\n      \"DSU.rtReadPXDataset\"\n      Deffun\n      rtdb2sql(pUKDWDATABASE, pUKDWUSERNAME, pUKDWPASSWORD, pUKDWSCHEMA, sSQL)\n      Calling\n      \"DSU.rtDB2sql\"\n      aActionFieldsA = rtreadpxdataset(sDatasetPath, sDatasetName)\n      aActionFields = \"\"\n      iNumFields = count(aActionFieldsA, Config.FM)\n      (1.0 until convertToInt(iNumFields)).zipWithIndex.map {\n        case (_o, oIndex) =>\n          var o = _o\n          aActionFields(o) = \"\"\n          ag = -1.0\n          (1.0 until convertToInt(iNumFields)).zipWithIndex.map {\n            case (_x, xIndex) =>\n              var x = _x\n              if (\n                ((aActionFieldsA(x) <= aActionFields(o)) || (aActionFields(\n                  o\n                ) == \"\")) && (aActionFieldsA(x) != \"\")\n              ) {\n                aActionFields(o) = aActionFieldsA(x)\n                iTag = x\n              } else {}\n          }.toArray\n          aActionFieldsA(iTag) = \"\"\n      }.toArray\n      Dimension\n      afieldmetadata(iNumFields, 2.0)\n      (1.0 until convertToInt(iNumFields)).zipWithIndex.map {\n        case (_i, iIndex) =>\n          var i = _i\n          sType = \"\"\n          sFieldInfo = ds_trim(aActionFields(i))\n          sFieldName = ds_trim(field3(sFieldInfo, \"~\", 2.0))\n          sMaxVal = ds_trim(field3(sFieldInfo, \"~\", 3.0))\n          sMinVal = ds_trim(field3(sFieldInfo, \"~\", 4.0))\n          afieldmetadata(i, 1.0) == sFieldName\n          afieldmetadata(i, 2.0) == ds_len(sMaxVal)\n          dsloginfo(\n            ds_string_concat(\n              ds_string_concat(afieldmetadata(i, 1.0), \"=\"),\n              afieldmetadata(i, 2.0)\n            ),\n            ProgramName\n          )\n      }.toArray\n      sValues = pPIB_ID\n      sSQL =\n        \"SELECT COUNT(DISTINCT columnname) FROM dbc.columns WHERE TABLENAME = 'DWH_PIB_ACTN_DESC' \"\n      sSQL = ds_string_concat(\n        sSQL,\n        \"AND columnname <> 'PIB_ID' AND columnname <> 'REC_TS'\"\n      )\n      iFieldCount = convert3(\n        Config.FM,\n        \"\",\n        rtdb2sql(pUKDWDATABASE, pUKDWUSERNAME, pUKDWPASSWORD, pUKDWSCHEMA, sSQL)\n      )\n      iFieldCount = iFieldCount / 2.0\n      if (iNumFields > iFieldCount) {\n        iNewCount = iFieldCount\n        dslogwarn(\n          ds_string_concat(\n            ds_string_concat(\n              iFieldCount,\n              \"description fields exceeded for PIB_ID = \"\n            ),\n            pPIB_ID\n          ),\n          ProgramName\n        )\n      } else iNewCount = iNumFields\n      (1.0 until convertToInt(iNewCount)).zipWithIndex.map {\n        case (_i, iIndex) =>\n          var i = _i\n          sValues = ds_string_concat(\n            sValues,\n            ds_string_concat(\n              ds_string_concat(\n                ds_string_concat(\",\", fmt(afieldmetadata(i, 1.0), \"18' 'L\")),\n                \",\"\n              ),\n              fmt(afieldmetadata(i, 2.0), \"8' 'L\")\n            )\n          )\n      }.toArray\n      (i until convertToInt(iFieldCount)).zipWithIndex.map {\n        case (_e, eIndex) =>\n          var e = _e\n          sValues = ds_string_concat(\n            sValues,\n            ds_string_concat(\n              ds_string_concat(ds_string_concat(\",\", space(18.0)), \",\"),\n              space(8.0)\n            )\n          )\n      }.toArray\n      sFileName = ds_string_concat(\n        ds_string_concat(\n          ds_string_concat(sDatasetPath, \"/\"),\n          field3(sDatasetName, \".\", 1.0)\n        ),\n        \".sf\"\n      )\n      touch = ds_string_concat(\"touch \", sFileName)\n      rm = ds_string_concat(\"rm \", sFileName)\n      pop = ds_string_concat(\n        ds_string_concat(ds_string_concat(\"echo \\\"\", sValues), \"\\\" > \"),\n        sFileName\n      )\n      dsexecute(\"UNIX\", touch, t1, t2)\n      dsexecute(\"UNIX\", rm, r1, r2)\n      dsexecute(\"UNIX\", pop, p1, p2)\n      Ans = p2\n      Ans\n    }\n  )\n}"}